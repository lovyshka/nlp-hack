from main.models import *

from asgiref.sync import sync_to_async
from django.core.management.base import BaseCommand
from rest_framework.authtoken.models import Token

import os, django, logging, warnings, uuid
warnings.filterwarnings("ignore")

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup, Update
from telegram.ext import (
    Application,
    CallbackContext,
    CallbackQueryHandler,
    ConversationHandler,
    CommandHandler,
    MessageHandler,
    filters,
)

os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"
django.setup()

# Enable logging
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)


@sync_to_async
def user_get_by_update(update: Update):
    """
        –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è django instance –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """

    if update.message:
        message = update.message
    else:
        message = update.callback_query.message

    if not message.chat.username:
        username = "Anonymous"
    else:
        username = message.chat.username

    instance, created = CustomUser.objects.update_or_create(
        username = username,
        telegram_chat_id = message.chat.id,
    )

    token = Token.objects.get_or_create(user=instance)
    
    return instance, created, token[0].key

async def start(update: Update, context: CallbackContext) -> None:
    """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    """
    usr, _, _ = await user_get_by_update(update)
    
    if usr.verified_usr:
        await context.bot.send_video(
            usr.telegram_chat_id,
            "https://media1.giphy.com/media/G3Hu8RMcnHZA2JK6x1/giphy.gif?cid=ecf05e47qybjqyrdm7j9unlomb839p3w2u2mloamu2lcx5qu&rid=giphy.gif&ct=g",
            caption=f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, <b>{usr.username}</b> üòΩ\n–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã üíº",
            parse_mode="HTML",
        )
    else:

        await context.bot.send_message(
            usr.telegram_chat_id,
            f"<b>{usr.username}</b>, –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ üò≥\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n‚ö´¬†<i>–ù–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É –Ω–∏–∂–µ</i>\n‚ö´¬†<i>–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤</i>\n‚ö´¬†<i>–û–∂–∏–¥–∞—Ç—å –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</i>",
            parse_mode="HTML",
        )

    return ConversationHandler.END

def main() -> None:
    """Run the bot."""

    application = Application.builder().token(os.environ.get("ACCOUNT_BOT_TOKEN")).build()
    
    application.add_handler(CommandHandler("start", start)) 
    application.add_handler(CallbackQueryHandler(start, "main_menu"))

    application.add_handler(MessageHandler("–ú–µ–Ω—é üì•", start))

    application.run_polling()


class Command(BaseCommand):
    help = '–ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞'

    def handle(self, *args, **kwargs):        
        main()

        
        
        
